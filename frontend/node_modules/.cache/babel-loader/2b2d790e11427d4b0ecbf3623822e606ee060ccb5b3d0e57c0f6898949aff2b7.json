{"ast":null,"code":"var _jsxFileName = \"/Users/anishniure/Desktop/FYP/frontend/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Styles/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  closeModal,\n  onLoginSuccess\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setIsLoading(true);\n\n    // Decide which endpoint to hit based on isLogin state\n    const endpoint = isLogin ? 'http://localhost:3000/api/auth/login' : 'http://localhost:3000/api/auth/signup';\n\n    // Gather form data\n    const formData = new FormData(e.target);\n    const payload = {\n      username: formData.get('username'),\n      email: formData.get('email'),\n      password: formData.get('password')\n    };\n\n    // If it's a login, username isn't needed\n    if (isLogin) delete payload.username;\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Success actions\n        alert(isLogin ? 'Login successful!' : 'Signup successful!');\n        if (isLogin && onLoginSuccess) {\n          // Pass token, role, etc., to the parent\n          onLoginSuccess(data.token, data.role);\n        }\n        closeModal(); // Close the modal on success\n      } else {\n        // Handle response error\n        setErrorMessage(data.message || 'An error occurred.');\n      }\n    } catch (error) {\n      console.error(error);\n      setErrorMessage('Failed to connect to the server.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (!isOpen) return null; // Don’t render if modal is closed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation() // Prevent closing on inner click\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-password\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/forgot-password\",\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Processing...' : isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-section\",\n        children: [isLogin ? \"Don't have an account?\" : 'Already have an account?', \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-btn\",\n          onClick: () => setIsLogin(!isLogin),\n          children: isLogin ? 'Sign Up' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"kmjxrGmgtpHF5QP2zeJimLMllyM=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Modal","isOpen","closeModal","onLoginSuccess","_s","isLogin","setIsLogin","errorMessage","setErrorMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","endpoint","formData","FormData","target","payload","username","get","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","token","role","message","error","console","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","href","disabled","_c","$RefreshReg$"],"sources":["/Users/anishniure/Desktop/FYP/frontend/src/components/Modal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Styles/Modal.css';\n\nconst Modal = ({ isOpen, closeModal, onLoginSuccess }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrorMessage('');\n    setIsLoading(true);\n\n    // Decide which endpoint to hit based on isLogin state\n    const endpoint = isLogin\n      ? 'http://localhost:3000/api/auth/login'\n      : 'http://localhost:3000/api/auth/signup';\n\n    // Gather form data\n    const formData = new FormData(e.target);\n    const payload = {\n      username: formData.get('username'),\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n\n    // If it's a login, username isn't needed\n    if (isLogin) delete payload.username;\n\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Success actions\n        alert(isLogin ? 'Login successful!' : 'Signup successful!');\n        if (isLogin && onLoginSuccess) {\n          // Pass token, role, etc., to the parent\n          onLoginSuccess(data.token, data.role);\n        }\n        closeModal(); // Close the modal on success\n      } else {\n        // Handle response error\n        setErrorMessage(data.message || 'An error occurred.');\n      }\n    } catch (error) {\n      console.error(error);\n      setErrorMessage('Failed to connect to the server.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!isOpen) return null; // Don’t render if modal is closed\n\n  return (\n    <div className=\"modal-overlay\" onClick={closeModal}>\n      <div\n        className=\"modal-content\"\n        onClick={(e) => e.stopPropagation()} // Prevent closing on inner click\n      >\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\n\n        <form onSubmit={handleSubmit}>\n          {/* Show Username only if signing up */}\n          {!isLogin && (\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              required\n            />\n          )}\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n          />\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n          />\n\n          {/* Forgot Password link for login only */}\n          {isLogin && (\n            <div className=\"forgot-password\">\n              <a href=\"/forgot-password\">Forgot your password?</a>\n            </div>\n          )}\n\n          <button type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Processing...' : isLogin ? 'Login' : 'Sign Up'}\n          </button>\n        </form>\n\n        {/* Display any error messages */}\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n        {/* Toggle between login and signup */}\n        <div className=\"toggle-section\">\n          {isLogin\n            ? \"Don't have an account?\"\n            : 'Already have an account?'}\n          &nbsp;\n          <button\n            className=\"toggle-btn\"\n            onClick={() => setIsLogin(!isLogin)}\n          >\n            {isLogin ? 'Sign Up' : 'Login'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}